(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     91560,       1706]
NotebookOptionsPosition[     42210,        801]
NotebookOutlinePosition[     88607,       1656]
CellTagsIndexPosition[     88564,       1653]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Supplemental notebook to R. Herrmann, \[OpenCurlyDoubleQuote]Fractional \
Calculus - Introduction for Physicists\[CloseCurlyDoubleQuote], 4th edition, \
World Scientific Publishing, Singapore. 
Chapter10
https://www.worldscientific.com/worldscibooks/10.1142/11107#t=aboutBook
\
\>", "Abstract",
 CellChangeTimes->{{3.936846078202136*^9, 3.936846095963605*^9}, {
  3.9368466529918027`*^9, 3.936846660818232*^9}, {3.9368467050503607`*^9, 
  3.9368467527463937`*^9}, {3.9368476699874973`*^9, 3.9368477016170673`*^9}, {
  3.936849947026825*^9, 3.936850002008106*^9}, {3.936850075928691*^9, 
  3.9368501025689764`*^9}, {3.9368511053284636`*^9, 3.9368511084313107`*^9}, {
  3.9368599415555315`*^9, 
  3.936859945376685*^9}},ExpressionUUID->"5ea679d1-100e-4463-bf8f-\
b97f628ead93"],

Cell[CellGroupData[{

Cell["Riesz potential of a cuboid ", "Title",
 CellChangeTimes->{
  3.863613679142305*^9, {3.9368461097387524`*^9, 3.9368461331463943`*^9}, 
   3.936859966649698*^9},
 TextAlignment->Center,
 TextJustification->1,
 LineSpacing->{1, 3},
 FontSize->36,ExpressionUUID->"22aec4c3-5caf-4ba1-9658-bdc05be2d048"],

Cell["Richard Herrmann", "Author",
 CellChangeTimes->{{3.863611443899569*^9, 3.863611507464816*^9}, {
  3.863611562219183*^9, 3.863611569851313*^9}, {3.863613364867556*^9, 
  3.863613365907259*^9}, {3.9368461416501775`*^9, 
  3.9368461451704407`*^9}},ExpressionUUID->"885eab29-f6d0-48fb-93dd-\
9e2f7ff37935"],

Cell["gigaHedron, r.herrmann@gigahedron.fractionalcalculus.org", "Department",
 CellChangeTimes->{{3.863611443899569*^9, 3.863611507464816*^9}, {
  3.863611562219183*^9, 3.8636115641069393`*^9}, {3.863613374139979*^9, 
  3.863613385052019*^9}, {3.9368461514651403`*^9, 3.936846156437321*^9}, {
  3.94878021232847*^9, 
  3.948780215972182*^9}},ExpressionUUID->"99b61ea7-1ccb-46af-90cf-\
456be21c01d0"],

Cell["October 2024.", "Date",
 CellChangeTimes->{{3.863696835464657*^9, 3.8636968430299397`*^9}, {
  3.9368461615434885`*^9, 3.936846166770876*^9}, {3.936846405703974*^9, 
  3.9368464091851497`*^9}, {3.9368467681350923`*^9, 
  3.936846778856764*^9}},ExpressionUUID->"b2abcad3-0401-44c3-9976-\
337f85b0e6d3"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.863613856212865*^9, 3.863613957381494*^9}, {
  3.8636140652080603`*^9, 3.863614067839384*^9}, {3.863614120152478*^9, 
  3.8636141208242693`*^9}, {3.863614670137464*^9, 3.8636146750735617`*^9}, {
  3.863696974088587*^9, 3.863696978197007*^9}, {3.863697372329714*^9, 
  3.863697392271419*^9}, {3.863697434686441*^9, 3.8636974377359943`*^9}},
 FontSize->24],

Cell["Mathematica notebook presenting  solution to exercise 10.1", "Text",
 CellChangeTimes->{{3.863697835830284*^9, 3.863697909539579*^9}, {
   3.863697943005314*^9, 3.863697980980297*^9}, 3.863698119706744*^9, {
   3.863699566439521*^9, 3.8636996129690332`*^9}, {3.863752401112919*^9, 
   3.863752555247409*^9}, {3.863752709262065*^9, 3.863752709717738*^9}, {
   3.936846520658655*^9, 3.936846552121307*^9}, {3.9368467976146717`*^9, 
   3.9368468057925267`*^9}, 3.9368605183879275`*^9, {3.9368609707516956`*^9, 
   3.936860984914822*^9}},ExpressionUUID->"800a45f8-4656-4e27-8a2b-\
bc84f5f4ea3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Program", "Section",
 CellChangeTimes->{
  3.863697319673023*^9, {3.863698675225418*^9, 3.8636987513938103`*^9}, {
   3.8636996053470087`*^9, 3.8636996074533167`*^9}, {3.863784517000079*^9, 
   3.863784517000765*^9}, {3.9368465584030685`*^9, 3.9368465600333347`*^9}},
 FontSize->24,ExpressionUUID->"93973b6b-5dc7-4775-9496-1fd8c31cdbc5"],

Cell[CellGroupData[{

Cell["start clean, try to integrate u", "Subsection",
 CellGroupingRules->{"SectionGrouping", Inherited},
 CellChangeTimes->{{3.863614129439954*^9, 3.863614152128813*^9}, {
  3.863698899901207*^9, 3.86369893631024*^9}, {3.936846221835967*^9, 
  3.936846225521393*^9}, {3.9368466157617064`*^9, 3.936846620417775*^9}, {
  3.936860524995183*^9, 3.9368605314726624`*^9}},
 FontSize->18,ExpressionUUID->"b3ca4b05-753f-428a-9ea0-9b6fef8556e3"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "k", ",", "q", ",", "a1", ",", "a2", ",", "a3", ",", "tryV4Integral"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryV4Integral", " ", "=", " ", "False"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"If", "[", 
   RowBox[{
   "tryV4Integral", ",", 
    "\"\<trying to integrate the final 4th integral: f(u)=v3\>\"", ",", " ", 
    "\"\<numerical integration of the 4th integral:  f(u)=v3\>\""}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.845298082592132*^9, 3.845298100904069*^9}, {
   3.845298202000863*^9, 3.8452982814960814`*^9}, {3.845298318849135*^9, 
   3.845298321172031*^9}, {3.8452983680259438`*^9, 3.845298393952128*^9}, 
   3.845298430678537*^9, {3.8452988492796392`*^9, 3.845298885091926*^9}, {
   3.845299387501663*^9, 3.8452994180760593`*^9}, {3.845299480007214*^9, 
   3.8452996284723883`*^9}, {3.845299665369811*^9, 3.845299669665019*^9}, {
   3.845299725238721*^9, 3.845299812666788*^9}, {3.8453034288522787`*^9, 
   3.845303451835134*^9}, {3.8453034824764843`*^9, 3.845303539258521*^9}, {
   3.845303572868043*^9, 3.8453036170911827`*^9}, {3.845303649508624*^9, 
   3.845303723091363*^9}, {3.845305515964817*^9, 3.845305585003141*^9}, {
   3.8453063086466093`*^9, 3.845306355036281*^9}, {3.845306602257779*^9, 
   3.8453066381688766`*^9}, {3.845306668225999*^9, 3.845306708577682*^9}, {
   3.845385759033904*^9, 3.845385837865658*^9}, {3.845385871938367*^9, 
   3.8453859375613623`*^9}, {3.8454527528828077`*^9, 3.845452804679349*^9}, {
   3.8455647739201603`*^9, 3.84556477530548*^9}, {3.8455717258911247`*^9, 
   3.845571977475243*^9}, {3.845572228919136*^9, 3.8455722332170057`*^9}, 
   3.8455726665536413`*^9, 3.845572919975371*^9, 3.845619748197866*^9, {
   3.8457356347682657`*^9, 3.8457356644625874`*^9}, {3.8458164245044603`*^9, 
   3.845816443277484*^9}, {3.846332406979836*^9, 3.846332437792861*^9}, {
   3.847114994576721*^9, 3.847115008477798*^9}, {3.8476272534788313`*^9, 
   3.8476272684965267`*^9}, {3.85031365361434*^9, 3.850313751461088*^9}, {
   3.850313869004898*^9, 3.8503140797988367`*^9}, {3.850314129743258*^9, 
   3.850314138983287*^9}, {3.8503694884724483`*^9, 3.85036949134619*^9}, {
   3.850369532075824*^9, 3.850369550738777*^9}, {3.850399882207321*^9, 
   3.850399894766055*^9}, {3.850568500928562*^9, 3.850568510572801*^9}, {
   3.850568553798938*^9, 3.85056858887189*^9}, {3.850655524336276*^9, 
   3.850655581236075*^9}, {3.8516018600890493`*^9, 3.8516018883584347`*^9}, {
   3.8516121111742697`*^9, 3.851612111453294*^9}, {3.851612149888275*^9, 
   3.8516121598141003`*^9}, {3.8516122144655647`*^9, 3.8516122430171337`*^9}, 
   3.851612572017911*^9, {3.8516627579642963`*^9, 3.851662758325798*^9}, {
   3.851673598413381*^9, 3.851673598803606*^9}, 3.85167365146918*^9, 
   3.8517462017734423`*^9, {3.8517462457532167`*^9, 3.85174627098811*^9}, {
   3.863611915859395*^9, 3.863611925954899*^9}, 3.863611984789844*^9, {
   3.863755075758154*^9, 3.8637550883255377`*^9}, {3.9368462084350367`*^9, 
   3.9368462743125257`*^9}, {3.9368466036827946`*^9, 3.936846610282233*^9}, 
   3.9368599805840807`*^9, {3.936860232265031*^9, 3.9368602758459544`*^9}, {
   3.9368605401230855`*^9, 3.9368605444679337`*^9}, {3.9368611838139024`*^9, 
   3.936861278277052*^9}, {3.9368613557198114`*^9, 3.9368613567885056`*^9}, {
   3.942469540298447*^9, 3.942469541652424*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"64d19385-87b4-4436-ab71-ec5c3c66c21d"],

Cell[" ", "Text",
 CellChangeTimes->{{3.863698515841571*^9, 3.863698616350314*^9}, {
  3.863698650261986*^9, 3.863698667529089*^9}, {3.863698768817422*^9, 
  3.863698864460732*^9}, {3.863752592743022*^9, 3.863752603718836*^9}, {
  3.936846564385281*^9, 
  3.936846583480342*^9}},ExpressionUUID->"09aa11dc-8c26-4892-95e7-\
e827906e28de"]
}, Open  ]],

Cell[CellGroupData[{

Cell["distance^2", "Subsection",
 CellGroupingRules->{"SectionGrouping", Inherited},
 CellChangeTimes->{{3.863614129439954*^9, 3.863614152128813*^9}, {
   3.863698899901207*^9, 3.86369893631024*^9}, {3.936846221835967*^9, 
   3.936846225521393*^9}, 3.936860016723695*^9},
 FontSize->18,ExpressionUUID->"1afbf8ea-e7aa-402f-8028-ab8afca4a804"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x1", "-", "y1"}], ")"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x2", "-", "y2"}], ")"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x3", "-", "y3"}], ")"}], "^", "2"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.845298082592132*^9, 3.845298100904069*^9}, {
   3.845298202000863*^9, 3.8452982814960814`*^9}, {3.845298318849135*^9, 
   3.845298321172031*^9}, {3.8452983680259438`*^9, 3.845298393952128*^9}, 
   3.845298430678537*^9, {3.8452988492796392`*^9, 3.845298885091926*^9}, {
   3.845299387501663*^9, 3.8452994180760593`*^9}, {3.845299480007214*^9, 
   3.8452996284723883`*^9}, {3.845299665369811*^9, 3.845299669665019*^9}, {
   3.845299725238721*^9, 3.845299812666788*^9}, {3.8453034288522787`*^9, 
   3.845303451835134*^9}, {3.8453034824764843`*^9, 3.845303539258521*^9}, {
   3.845303572868043*^9, 3.8453036170911827`*^9}, {3.845303649508624*^9, 
   3.845303723091363*^9}, {3.845305515964817*^9, 3.845305585003141*^9}, {
   3.8453063086466093`*^9, 3.845306355036281*^9}, {3.845306602257779*^9, 
   3.8453066381688766`*^9}, {3.845306668225999*^9, 3.845306708577682*^9}, {
   3.845385759033904*^9, 3.845385837865658*^9}, {3.845385871938367*^9, 
   3.8453859375613623`*^9}, {3.8454527528828077`*^9, 3.845452804679349*^9}, {
   3.8455647739201603`*^9, 3.84556477530548*^9}, {3.8455717258911247`*^9, 
   3.845571977475243*^9}, {3.845572228919136*^9, 3.8455722332170057`*^9}, 
   3.8455726665536413`*^9, 3.845572919975371*^9, 3.845619748197866*^9, {
   3.8457356347682657`*^9, 3.8457356644625874`*^9}, {3.8458164245044603`*^9, 
   3.845816443277484*^9}, {3.846332406979836*^9, 3.846332437792861*^9}, {
   3.847114994576721*^9, 3.847115008477798*^9}, {3.8476272534788313`*^9, 
   3.8476272684965267`*^9}, {3.85031365361434*^9, 3.850313751461088*^9}, {
   3.850313869004898*^9, 3.8503140797988367`*^9}, {3.850314129743258*^9, 
   3.850314138983287*^9}, {3.8503694884724483`*^9, 3.85036949134619*^9}, {
   3.850369532075824*^9, 3.850369550738777*^9}, {3.850399882207321*^9, 
   3.850399894766055*^9}, {3.850568500928562*^9, 3.850568510572801*^9}, {
   3.850568553798938*^9, 3.85056858887189*^9}, {3.850655524336276*^9, 
   3.850655581236075*^9}, {3.8516018600890493`*^9, 3.8516018883584347`*^9}, {
   3.8516121111742697`*^9, 3.851612111453294*^9}, {3.851612149888275*^9, 
   3.8516121598141003`*^9}, {3.8516122144655647`*^9, 3.8516122430171337`*^9}, 
   3.851612572017911*^9, {3.8516627579642963`*^9, 3.851662758325798*^9}, {
   3.851673598413381*^9, 3.851673598803606*^9}, 3.85167365146918*^9, 
   3.8517462017734423`*^9, {3.8517462457532167`*^9, 3.85174627098811*^9}, {
   3.863611915859395*^9, 3.863611925954899*^9}, 3.863611984789844*^9, {
   3.863755075758154*^9, 3.8637550883255377`*^9}, {3.9368462084350367`*^9, 
   3.9368462743125257`*^9}, 3.9368506368942194`*^9, 3.9368512052333264`*^9, 
   3.9368600260245886`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"0177cc6a-bacb-4643-b674-dac983eb5ebf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gaussian integrand", "Subsection",
 CellChangeTimes->{{3.8636142447937193`*^9, 3.86361427637881*^9}, {
   3.8636989460036907`*^9, 3.863698993905814*^9}, {3.863752669606263*^9, 
   3.863752670021994*^9}, {3.936846459346407*^9, 3.9368464693937902`*^9}, 
   3.9368600491951704`*^9},
 FontSize->18,ExpressionUUID->"f277bcf4-4b2e-495f-95ca-b2a0d9e5cca5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"v0", "=", 
   RowBox[{
    RowBox[{"2", "/", 
     RowBox[{"Sqrt", "[", "Pi", "]"}]}], " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"u", "^", "kp"}]}], " ", "d2"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.845298082592132*^9, 3.845298100904069*^9}, {
   3.845298202000863*^9, 3.8452982814960814`*^9}, {3.845298318849135*^9, 
   3.845298321172031*^9}, {3.8452983680259438`*^9, 3.845298393952128*^9}, 
   3.845298430678537*^9, {3.8452988492796392`*^9, 3.845298885091926*^9}, {
   3.845299387501663*^9, 3.8452994180760593`*^9}, {3.845299480007214*^9, 
   3.8452996284723883`*^9}, {3.845299665369811*^9, 3.845299669665019*^9}, {
   3.845299725238721*^9, 3.845299812666788*^9}, {3.8453034288522787`*^9, 
   3.845303451835134*^9}, {3.8453034824764843`*^9, 3.845303539258521*^9}, {
   3.845303572868043*^9, 3.8453036170911827`*^9}, {3.845303649508624*^9, 
   3.845303723091363*^9}, {3.845305515964817*^9, 3.845305585003141*^9}, {
   3.8453063086466093`*^9, 3.845306355036281*^9}, {3.845306602257779*^9, 
   3.8453066381688766`*^9}, {3.845306668225999*^9, 3.845306708577682*^9}, {
   3.845385759033904*^9, 3.845385837865658*^9}, {3.845385871938367*^9, 
   3.8453859375613623`*^9}, {3.8454527528828077`*^9, 3.845452804679349*^9}, {
   3.8455647739201603`*^9, 3.84556477530548*^9}, {3.8455717258911247`*^9, 
   3.845571977475243*^9}, {3.845572228919136*^9, 3.8455722332170057`*^9}, 
   3.8455726665536413`*^9, 3.845572919975371*^9, 3.845619748197866*^9, {
   3.8457356347682657`*^9, 3.8457356644625874`*^9}, {3.8458164245044603`*^9, 
   3.845816443277484*^9}, {3.846332406979836*^9, 3.846332437792861*^9}, {
   3.847114994576721*^9, 3.847115008477798*^9}, {3.8476272534788313`*^9, 
   3.8476272684965267`*^9}, {3.85031365361434*^9, 3.850313751461088*^9}, {
   3.850313869004898*^9, 3.8503140797988367`*^9}, {3.850314129743258*^9, 
   3.850314138983287*^9}, {3.8503694884724483`*^9, 3.85036949134619*^9}, {
   3.850369532075824*^9, 3.850369550738777*^9}, {3.850399882207321*^9, 
   3.850399894766055*^9}, {3.850568500928562*^9, 3.850568510572801*^9}, {
   3.850568553798938*^9, 3.85056858887189*^9}, {3.850655524336276*^9, 
   3.850655581236075*^9}, {3.8516018600890493`*^9, 3.8516018883584347`*^9}, {
   3.8516121111742697`*^9, 3.851612111453294*^9}, {3.851612149888275*^9, 
   3.8516121598141003`*^9}, {3.8516122144655647`*^9, 3.8516122430171337`*^9}, 
   3.851612572017911*^9, {3.8516627579642963`*^9, 3.851662758325798*^9}, {
   3.851673598413381*^9, 3.851673598803606*^9}, 3.85167365146918*^9, 
   3.8517462017734423`*^9, {3.8517462457532167`*^9, 3.85174627098811*^9}, {
   3.863611915859395*^9, 3.863611925954899*^9}, 3.863611984789844*^9, 
   3.8636143221851892`*^9, 3.9368462822936087`*^9, {3.9368463371394515`*^9, 
   3.936846342245151*^9}, {3.936846474273782*^9, 3.936846484575913*^9}, {
   3.9368470322724257`*^9, 3.936847034091071*^9}, {3.93685117251343*^9, 
   3.9368511742885814`*^9}, 3.9368513384756145`*^9, {3.936851398779335*^9, 
   3.9368514007937927`*^9}, 3.9368600935788355`*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"be0554ff-e4ee-446b-86c5-fe8af878a703"]
}, Open  ]],

Cell[CellGroupData[{

Cell["volume integration -> v3", "Subsection",
 CellChangeTimes->{{3.8636142447937193`*^9, 3.86361427637881*^9}, {
   3.8636989460036907`*^9, 3.863698993905814*^9}, {3.863752669606263*^9, 
   3.863752670021994*^9}, {3.936846459346407*^9, 3.9368464693937902`*^9}, 
   3.9368600491951704`*^9, 3.936860166322894*^9, {3.936861309585182*^9, 
   3.9368613146431885`*^9}},
 FontSize->18,ExpressionUUID->"5be59f3a-5c17-4e73-ae3b-774d05a70f0f"],

Cell[BoxData[
 RowBox[{"v3", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{"v0", ",", 
    RowBox[{"{", 
     RowBox[{"x1", ",", 
      RowBox[{"-", "a"}], ",", "a"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x2", ",", 
      RowBox[{"-", "b"}], ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x3", ",", 
      RowBox[{"-", "c"}], ",", "c"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.845298082592132*^9, 3.845298100904069*^9}, {
   3.845298202000863*^9, 3.8452982814960814`*^9}, {3.845298318849135*^9, 
   3.845298321172031*^9}, {3.8452983680259438`*^9, 3.845298393952128*^9}, 
   3.845298430678537*^9, {3.8452988492796392`*^9, 3.845298885091926*^9}, {
   3.845299387501663*^9, 3.8452994180760593`*^9}, {3.845299480007214*^9, 
   3.8452996284723883`*^9}, {3.845299665369811*^9, 3.845299669665019*^9}, {
   3.845299725238721*^9, 3.845299812666788*^9}, {3.8453034288522787`*^9, 
   3.845303451835134*^9}, {3.8453034824764843`*^9, 3.845303539258521*^9}, {
   3.845303572868043*^9, 3.8453036170911827`*^9}, {3.845303649508624*^9, 
   3.845303723091363*^9}, {3.845305515964817*^9, 3.845305585003141*^9}, {
   3.8453063086466093`*^9, 3.845306355036281*^9}, {3.845306602257779*^9, 
   3.8453066381688766`*^9}, {3.845306668225999*^9, 3.845306708577682*^9}, {
   3.845385759033904*^9, 3.845385837865658*^9}, {3.845385871938367*^9, 
   3.8453859375613623`*^9}, {3.8454527528828077`*^9, 3.845452804679349*^9}, {
   3.8455647739201603`*^9, 3.84556477530548*^9}, {3.8455717258911247`*^9, 
   3.845571977475243*^9}, {3.845572228919136*^9, 3.8455722332170057`*^9}, 
   3.8455726665536413`*^9, 3.845572919975371*^9, 3.845619748197866*^9, {
   3.8457356347682657`*^9, 3.8457356644625874`*^9}, {3.8458164245044603`*^9, 
   3.845816443277484*^9}, {3.846332406979836*^9, 3.846332437792861*^9}, {
   3.847114994576721*^9, 3.847115008477798*^9}, {3.8476272534788313`*^9, 
   3.8476272684965267`*^9}, {3.85031365361434*^9, 3.850313751461088*^9}, {
   3.850313869004898*^9, 3.8503140797988367`*^9}, {3.850314129743258*^9, 
   3.850314138983287*^9}, {3.8503694884724483`*^9, 3.85036949134619*^9}, {
   3.850369532075824*^9, 3.850369550738777*^9}, {3.850399882207321*^9, 
   3.850399894766055*^9}, {3.850568500928562*^9, 3.850568510572801*^9}, {
   3.850568553798938*^9, 3.85056858887189*^9}, {3.850655524336276*^9, 
   3.850655581236075*^9}, {3.8516018600890493`*^9, 3.8516018883584347`*^9}, {
   3.8516121111742697`*^9, 3.851612111453294*^9}, {3.851612149888275*^9, 
   3.8516121598141003`*^9}, {3.8516122144655647`*^9, 3.8516122430171337`*^9}, 
   3.851612572017911*^9, {3.8516627579642963`*^9, 3.851662758325798*^9}, {
   3.851673598413381*^9, 3.851673598803606*^9}, 3.85167365146918*^9, 
   3.8517462017734423`*^9, {3.8517462457532167`*^9, 3.85174627098811*^9}, {
   3.863611915859395*^9, 3.863611925954899*^9}, 3.863611984789844*^9, 
   3.8636143221851892`*^9, 3.9368462822936087`*^9, {3.9368463371394515`*^9, 
   3.936846342245151*^9}, {3.936846474273782*^9, 3.936846484575913*^9}, {
   3.9368470322724257`*^9, 3.936847034091071*^9}, {3.93685117251343*^9, 
   3.9368511742885814`*^9}, 3.9368513384756145`*^9, {3.936851398779335*^9, 
   3.9368514007937927`*^9}, 3.9368600935788355`*^9, {3.936860149748582*^9, 
   3.936860179456582*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"3d3183e4-b560-4038-ae8e-12b152fab50a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["try to solve the u-integral, but no simple solution", "Subsection",
 CellChangeTimes->{{3.8636142447937193`*^9, 3.86361427637881*^9}, {
   3.8636989460036907`*^9, 3.863698993905814*^9}, {3.863752669606263*^9, 
   3.863752670021994*^9}, {3.936846459346407*^9, 3.9368464693937902`*^9}, 
   3.9368600491951704`*^9, 3.936860166322894*^9, 3.9368602167781615`*^9, 
   3.93686151052106*^9},
 FontSize->18,ExpressionUUID->"2a044fb4-ec7a-4645-b9c7-abf85661ab18"],

Cell[BoxData[
 RowBox[{"v4", "=", 
  RowBox[{"If", "[", 
   RowBox[{"tryV4Integral", ",", 
    RowBox[{"Integrate", "[", 
     RowBox[{"v3", ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.845298082592132*^9, 3.845298100904069*^9}, {
   3.845298202000863*^9, 3.8452982814960814`*^9}, {3.845298318849135*^9, 
   3.845298321172031*^9}, {3.8452983680259438`*^9, 3.845298393952128*^9}, 
   3.845298430678537*^9, {3.8452988492796392`*^9, 3.845298885091926*^9}, {
   3.845299387501663*^9, 3.8452994180760593`*^9}, {3.845299480007214*^9, 
   3.8452996284723883`*^9}, {3.845299665369811*^9, 3.845299669665019*^9}, {
   3.845299725238721*^9, 3.845299812666788*^9}, {3.8453034288522787`*^9, 
   3.845303451835134*^9}, {3.8453034824764843`*^9, 3.845303539258521*^9}, {
   3.845303572868043*^9, 3.8453036170911827`*^9}, {3.845303649508624*^9, 
   3.845303723091363*^9}, {3.845305515964817*^9, 3.845305585003141*^9}, {
   3.8453063086466093`*^9, 3.845306355036281*^9}, {3.845306602257779*^9, 
   3.8453066381688766`*^9}, {3.845306668225999*^9, 3.845306708577682*^9}, {
   3.845385759033904*^9, 3.845385837865658*^9}, {3.845385871938367*^9, 
   3.8453859375613623`*^9}, {3.8454527528828077`*^9, 3.845452804679349*^9}, {
   3.8455647739201603`*^9, 3.84556477530548*^9}, {3.8455717258911247`*^9, 
   3.845571977475243*^9}, {3.845572228919136*^9, 3.8455722332170057`*^9}, 
   3.8455726665536413`*^9, 3.845572919975371*^9, 3.845619748197866*^9, {
   3.8457356347682657`*^9, 3.8457356644625874`*^9}, {3.8458164245044603`*^9, 
   3.845816443277484*^9}, {3.846332406979836*^9, 3.846332437792861*^9}, {
   3.847114994576721*^9, 3.847115008477798*^9}, {3.8476272534788313`*^9, 
   3.8476272684965267`*^9}, {3.85031365361434*^9, 3.850313751461088*^9}, {
   3.850313869004898*^9, 3.8503140797988367`*^9}, {3.850314129743258*^9, 
   3.850314138983287*^9}, {3.8503694884724483`*^9, 3.85036949134619*^9}, {
   3.850369532075824*^9, 3.850369550738777*^9}, {3.850399882207321*^9, 
   3.850399894766055*^9}, {3.850568500928562*^9, 3.850568510572801*^9}, {
   3.850568553798938*^9, 3.85056858887189*^9}, {3.850655524336276*^9, 
   3.850655581236075*^9}, {3.8516018600890493`*^9, 3.8516018883584347`*^9}, {
   3.8516121111742697`*^9, 3.851612111453294*^9}, {3.851612149888275*^9, 
   3.8516121598141003`*^9}, {3.8516122144655647`*^9, 3.8516122430171337`*^9}, 
   3.851612572017911*^9, {3.8516627579642963`*^9, 3.851662758325798*^9}, {
   3.851673598413381*^9, 3.851673598803606*^9}, 3.85167365146918*^9, 
   3.8517462017734423`*^9, {3.8517462457532167`*^9, 3.85174627098811*^9}, {
   3.863611915859395*^9, 3.863611925954899*^9}, 3.863611984789844*^9, 
   3.8636143221851892`*^9, 3.9368462822936087`*^9, {3.9368463371394515`*^9, 
   3.936846342245151*^9}, {3.936846474273782*^9, 3.936846484575913*^9}, {
   3.9368470322724257`*^9, 3.936847034091071*^9}, {3.93685117251343*^9, 
   3.9368511742885814`*^9}, 3.9368513384756145`*^9, {3.936851398779335*^9, 
   3.9368514007937927`*^9}, 3.9368600935788355`*^9, {3.936860149748582*^9, 
   3.936860179456582*^9}, {3.936860225860071*^9, 3.9368602829776664`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"60696b57-b9ce-4a1f-9d4e-fe88bc1c3aa0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["instead use f since v3 is a product", "Subsection",
 CellChangeTimes->{{3.8636142447937193`*^9, 3.86361427637881*^9}, {
   3.8636989460036907`*^9, 3.863698993905814*^9}, {3.863752669606263*^9, 
   3.863752670021994*^9}, {3.936846459346407*^9, 3.9368464693937902`*^9}, 
   3.9368600491951704`*^9, 3.936860166322894*^9, 3.9368603027471733`*^9},
 FontSize->18,ExpressionUUID->"38122ca4-9200-4ae1-bfc8-f7d644dbb708"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", " ", "a_", ",", " ", "kp_"}], "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Erf", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", " ", "-", " ", "x"}], ")"}], "*", 
       RowBox[{"u", "^", 
        RowBox[{"(", 
         RowBox[{"kp", "/", "2"}], ")"}]}]}], "]"}], " ", "+", " ", 
     RowBox[{"Erf", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", " ", "+", " ", "x"}], ")"}], "*", 
       RowBox[{"u", "^", 
        RowBox[{"(", 
         RowBox[{"kp", "/", "2"}], ")"}]}]}], "]"}]}], ")"}], "/", 
   RowBox[{"u", "^", 
    RowBox[{"(", 
     RowBox[{"kp", "/", "2"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.845298082592132*^9, 3.845298100904069*^9}, {
   3.845298202000863*^9, 3.8452982814960814`*^9}, {3.845298318849135*^9, 
   3.845298321172031*^9}, {3.8452983680259438`*^9, 3.845298393952128*^9}, 
   3.845298430678537*^9, {3.8452988492796392`*^9, 3.845298885091926*^9}, {
   3.845299387501663*^9, 3.8452994180760593`*^9}, {3.845299480007214*^9, 
   3.8452996284723883`*^9}, {3.845299665369811*^9, 3.845299669665019*^9}, {
   3.845299725238721*^9, 3.845299812666788*^9}, {3.8453034288522787`*^9, 
   3.845303451835134*^9}, {3.8453034824764843`*^9, 3.845303539258521*^9}, {
   3.845303572868043*^9, 3.8453036170911827`*^9}, {3.845303649508624*^9, 
   3.845303723091363*^9}, {3.845305515964817*^9, 3.845305585003141*^9}, {
   3.8453063086466093`*^9, 3.845306355036281*^9}, {3.845306602257779*^9, 
   3.8453066381688766`*^9}, {3.845306668225999*^9, 3.845306708577682*^9}, {
   3.845385759033904*^9, 3.845385837865658*^9}, {3.845385871938367*^9, 
   3.8453859375613623`*^9}, {3.8454527528828077`*^9, 3.845452804679349*^9}, {
   3.8455647739201603`*^9, 3.84556477530548*^9}, {3.8455717258911247`*^9, 
   3.845571977475243*^9}, {3.845572228919136*^9, 3.8455722332170057`*^9}, 
   3.8455726665536413`*^9, 3.845572919975371*^9, 3.845619748197866*^9, {
   3.8457356347682657`*^9, 3.8457356644625874`*^9}, {3.8458164245044603`*^9, 
   3.845816443277484*^9}, {3.846332406979836*^9, 3.846332437792861*^9}, {
   3.847114994576721*^9, 3.847115008477798*^9}, {3.8476272534788313`*^9, 
   3.8476272684965267`*^9}, {3.85031365361434*^9, 3.850313751461088*^9}, {
   3.850313869004898*^9, 3.8503140797988367`*^9}, {3.850314129743258*^9, 
   3.850314138983287*^9}, {3.8503694884724483`*^9, 3.85036949134619*^9}, {
   3.850369532075824*^9, 3.850369550738777*^9}, {3.850399882207321*^9, 
   3.850399894766055*^9}, {3.850568500928562*^9, 3.850568510572801*^9}, {
   3.850568553798938*^9, 3.85056858887189*^9}, {3.850655524336276*^9, 
   3.850655581236075*^9}, {3.8516018600890493`*^9, 3.8516018883584347`*^9}, {
   3.8516121111742697`*^9, 3.851612111453294*^9}, {3.851612149888275*^9, 
   3.8516121598141003`*^9}, {3.8516122144655647`*^9, 3.8516122430171337`*^9}, 
   3.851612572017911*^9, {3.8516627579642963`*^9, 3.851662758325798*^9}, {
   3.851673598413381*^9, 3.851673598803606*^9}, 3.85167365146918*^9, 
   3.8517462017734423`*^9, {3.8517462457532167`*^9, 3.85174627098811*^9}, {
   3.863611915859395*^9, 3.863611925954899*^9}, 3.863611984789844*^9, 
   3.8636143221851892`*^9, 3.9368462822936087`*^9, {3.9368463371394515`*^9, 
   3.936846342245151*^9}, {3.936846474273782*^9, 3.936846484575913*^9}, {
   3.9368470322724257`*^9, 3.936847034091071*^9}, {3.93685117251343*^9, 
   3.9368511742885814`*^9}, 3.9368513384756145`*^9, {3.936851398779335*^9, 
   3.9368514007937927`*^9}, 3.9368600935788355`*^9, {3.936860149748582*^9, 
   3.936860179456582*^9}, 3.936860317333187*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"11f923f3-3f0e-4095-b45b-55cf68ce8438"]
}, Open  ]],

Cell[CellGroupData[{

Cell["example", "Subsection",
 CellChangeTimes->{{3.8636142447937193`*^9, 3.86361427637881*^9}, {
   3.8636989460036907`*^9, 3.863698993905814*^9}, {3.863752669606263*^9, 
   3.863752670021994*^9}, {3.936846459346407*^9, 3.9368464693937902`*^9}, 
   3.9368600491951704`*^9, 3.936860166322894*^9, 3.9368603027471733`*^9, {
   3.936860333275343*^9, 3.9368603351621294`*^9}},
 FontSize->18,ExpressionUUID->"711295ce-6902-4aa1-9650-e8c097473dbd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", " ", "=", " ", 
   RowBox[{"3", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q", " ", "=", " ", 
   RowBox[{"2", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a1", " ", "=", " ", 
   RowBox[{"q", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a2", " ", "=", " ", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "q"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a3", " ", "=", " ", 
   RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"int1", "=", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "a1", ",", "k"}], "]"}], 
    RowBox[{"f", "[", 
     RowBox[{"0", ",", "a2", ",", "k"}], "]"}], 
    RowBox[{"f", "[", 
     RowBox[{"0", ",", "a3", ",", "k"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"int2", "=", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "a1", ",", "k"}], "]"}], 
    RowBox[{"f", "[", 
     RowBox[{"y", ",", "a2", ",", "k"}], "]"}], 
    RowBox[{"f", "[", 
     RowBox[{"0", ",", "a3", ",", "k"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"int3", "=", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "a1", ",", "k"}], "]"}], 
    RowBox[{"f", "[", 
     RowBox[{"y", ",", "a2", ",", "k"}], "]"}], 
    RowBox[{"f", "[", 
     RowBox[{"z", ",", "a3", ",", "k"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.845298082592132*^9, 3.845298100904069*^9}, {
   3.845298202000863*^9, 3.8452982814960814`*^9}, {3.845298318849135*^9, 
   3.845298321172031*^9}, {3.8452983680259438`*^9, 3.845298393952128*^9}, 
   3.845298430678537*^9, {3.8452988492796392`*^9, 3.845298885091926*^9}, {
   3.845299387501663*^9, 3.8452994180760593`*^9}, {3.845299480007214*^9, 
   3.8452996284723883`*^9}, {3.845299665369811*^9, 3.845299669665019*^9}, {
   3.845299725238721*^9, 3.845299812666788*^9}, {3.8453034288522787`*^9, 
   3.845303451835134*^9}, {3.8453034824764843`*^9, 3.845303539258521*^9}, {
   3.845303572868043*^9, 3.8453036170911827`*^9}, {3.845303649508624*^9, 
   3.845303723091363*^9}, {3.845305515964817*^9, 3.845305585003141*^9}, {
   3.8453063086466093`*^9, 3.845306355036281*^9}, {3.845306602257779*^9, 
   3.8453066381688766`*^9}, {3.845306668225999*^9, 3.845306708577682*^9}, {
   3.845385759033904*^9, 3.845385837865658*^9}, {3.845385871938367*^9, 
   3.8453859375613623`*^9}, {3.8454527528828077`*^9, 3.845452804679349*^9}, {
   3.8455647739201603`*^9, 3.84556477530548*^9}, {3.8455717258911247`*^9, 
   3.845571977475243*^9}, {3.845572228919136*^9, 3.8455722332170057`*^9}, 
   3.8455726665536413`*^9, 3.845572919975371*^9, 3.845619748197866*^9, {
   3.8457356347682657`*^9, 3.8457356644625874`*^9}, {3.8458164245044603`*^9, 
   3.845816443277484*^9}, {3.846332406979836*^9, 3.846332437792861*^9}, {
   3.847114994576721*^9, 3.847115008477798*^9}, {3.8476272534788313`*^9, 
   3.8476272684965267`*^9}, {3.85031365361434*^9, 3.850313751461088*^9}, {
   3.850313869004898*^9, 3.8503140797988367`*^9}, {3.850314129743258*^9, 
   3.850314138983287*^9}, {3.8503694884724483`*^9, 3.85036949134619*^9}, {
   3.850369532075824*^9, 3.850369550738777*^9}, {3.850399882207321*^9, 
   3.850399894766055*^9}, {3.850568500928562*^9, 3.850568510572801*^9}, {
   3.850568553798938*^9, 3.85056858887189*^9}, {3.850655524336276*^9, 
   3.850655581236075*^9}, {3.8516018600890493`*^9, 3.8516018883584347`*^9}, {
   3.8516121111742697`*^9, 3.851612111453294*^9}, {3.851612149888275*^9, 
   3.8516121598141003`*^9}, {3.8516122144655647`*^9, 3.8516122430171337`*^9}, 
   3.851612572017911*^9, {3.8516627579642963`*^9, 3.851662758325798*^9}, {
   3.851673598413381*^9, 3.851673598803606*^9}, 3.85167365146918*^9, 
   3.8517462017734423`*^9, {3.8517462457532167`*^9, 3.85174627098811*^9}, {
   3.863611915859395*^9, 3.863611925954899*^9}, 3.863611984789844*^9, 
   3.8636143221851892`*^9, 3.9368462822936087`*^9, {3.9368463371394515`*^9, 
   3.936846342245151*^9}, {3.936846474273782*^9, 3.936846484575913*^9}, {
   3.9368470322724257`*^9, 3.936847034091071*^9}, {3.93685117251343*^9, 
   3.9368511742885814`*^9}, 3.9368513384756145`*^9, {3.936851398779335*^9, 
   3.9368514007937927`*^9}, 3.9368600935788355`*^9, {3.936860149748582*^9, 
   3.936860179456582*^9}, 3.936860317333187*^9, 3.936860359500676*^9, {
   3.9368615257949815`*^9, 3.9368615389383807`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"08c2569d-8798-4c41-9213-20099c31ce98"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pictures ", "Subsection",
 CellChangeTimes->{{3.863614339931861*^9, 3.863614380844563*^9}, 
   3.9368464469381695`*^9, 3.9368601121815767`*^9, {3.936860416884013*^9, 
   3.936860418451729*^9}},
 FontSize->18,ExpressionUUID->"467b3bad-71ed-42e6-a36b-6fd320328b1e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"blk", "=", "0.7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", " ", "=", " ", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z", ",", 
       RowBox[{"-", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{"int3", ",", 
          RowBox[{"{", 
           RowBox[{"u", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "blk"}], ",", "blk", ",", 
       RowBox[{"1", "/", "20"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "blk"}], ",", "blk", ",", 
       RowBox[{"1", "/", "20"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "blk"}], ",", "blk", ",", 
       RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v", " ", "=", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"t", ",", "2"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"pic11", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{"int1", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pic12", "=", " ", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{"int2", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pic21", "=", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{"int2", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pic22", "=", 
   RowBox[{"ListContourPlot3D", "[", 
    RowBox[{"v", ",", " ", 
     RowBox[{"Contours", "\[Rule]", "3"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"result", " ", "=", " ", 
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pic11", ",", "pic12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"pic21", ",", "pic22"}], "}"}]}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.845298082592132*^9, 3.845298100904069*^9}, {
   3.845298202000863*^9, 3.8452982814960814`*^9}, {3.845298318849135*^9, 
   3.845298321172031*^9}, {3.8452983680259438`*^9, 3.845298393952128*^9}, 
   3.845298430678537*^9, {3.8452988492796392`*^9, 3.845298885091926*^9}, {
   3.845299387501663*^9, 3.8452994180760593`*^9}, {3.845299480007214*^9, 
   3.8452996284723883`*^9}, {3.845299665369811*^9, 3.845299669665019*^9}, {
   3.845299725238721*^9, 3.845299812666788*^9}, {3.8453034288522787`*^9, 
   3.845303451835134*^9}, {3.8453034824764843`*^9, 3.845303539258521*^9}, {
   3.845303572868043*^9, 3.8453036170911827`*^9}, {3.845303649508624*^9, 
   3.845303723091363*^9}, {3.845305515964817*^9, 3.845305585003141*^9}, {
   3.8453063086466093`*^9, 3.845306355036281*^9}, {3.845306602257779*^9, 
   3.8453066381688766`*^9}, {3.845306668225999*^9, 3.845306708577682*^9}, {
   3.845385759033904*^9, 3.845385837865658*^9}, {3.845385871938367*^9, 
   3.8453859375613623`*^9}, {3.8454527528828077`*^9, 3.845452804679349*^9}, {
   3.8455647739201603`*^9, 3.84556477530548*^9}, {3.8455717258911247`*^9, 
   3.845571977475243*^9}, {3.845572228919136*^9, 3.8455722332170057`*^9}, 
   3.8455726665536413`*^9, 3.845572919975371*^9, 3.845619748197866*^9, {
   3.8457356347682657`*^9, 3.8457356644625874`*^9}, {3.8458164245044603`*^9, 
   3.845816443277484*^9}, {3.846332406979836*^9, 3.846332437792861*^9}, {
   3.847114994576721*^9, 3.847115008477798*^9}, {3.8476272534788313`*^9, 
   3.8476272684965267`*^9}, {3.85031365361434*^9, 3.850313751461088*^9}, {
   3.850313869004898*^9, 3.8503140797988367`*^9}, {3.850314129743258*^9, 
   3.850314138983287*^9}, {3.8503694884724483`*^9, 3.85036949134619*^9}, {
   3.850369532075824*^9, 3.850369550738777*^9}, {3.850399882207321*^9, 
   3.850399894766055*^9}, {3.850568500928562*^9, 3.850568510572801*^9}, {
   3.850568553798938*^9, 3.85056858887189*^9}, {3.850655524336276*^9, 
   3.850655581236075*^9}, {3.8516018600890493`*^9, 3.8516018883584347`*^9}, {
   3.8516121111742697`*^9, 3.851612111453294*^9}, {3.851612149888275*^9, 
   3.8516121598141003`*^9}, {3.8516122144655647`*^9, 3.8516122430171337`*^9}, 
   3.851612572017911*^9, {3.8516627579642963`*^9, 3.851662758325798*^9}, {
   3.851673598413381*^9, 3.851673598803606*^9}, 3.85167365146918*^9, 
   3.8517462017734423`*^9, {3.8517462457532167`*^9, 3.85174627098811*^9}, {
   3.863611915859395*^9, 3.863611925954899*^9}, 3.863611984789844*^9, 
   3.8636143221851892`*^9, {3.863614401064406*^9, 3.863614518440984*^9}, {
   3.863614562698929*^9, 3.863614613762156*^9}, {3.863614722990309*^9, 
   3.863614798244667*^9}, {3.9368463574523277`*^9, 3.936846383763406*^9}, {
   3.9368464788418283`*^9, 3.936846480024044*^9}, {3.936846829140068*^9, 
   3.9368468347046423`*^9}, 3.936846876518096*^9, 3.93684967503445*^9, {
   3.9368498291724806`*^9, 3.9368498371360445`*^9}, {3.9368512618929567`*^9, 
   3.9368512646266317`*^9}, {3.9368513117399263`*^9, 3.9368513152658453`*^9}, 
   3.9368601268531914`*^9, 3.936860409922538*^9, {3.936860771349702*^9, 
   3.9368607948612947`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"199db859-e1e0-414b-b0bc-84332b70c5e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export and finish  ", "Subsection",
 CellChangeTimes->{{3.863614339931861*^9, 3.863614380844563*^9}, 
   3.9368464469381695`*^9, 3.9368601121815767`*^9, {3.936860416884013*^9, 
   3.9368604465731306`*^9}},
 FontSize->18,ExpressionUUID->"d2b8f80b-fd52-4679-bbf4-ad0eae3a4deb"],

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{"\"\<figure2x2.eps\>\"", ",", " ", "result"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<figure2x2gray.eps\>\"", ",", " ", 
   RowBox[{"ColorConvert", "[", 
    RowBox[{"result", ",", "\"\<Grayscale\>\""}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.845298082592132*^9, 3.845298100904069*^9}, {
   3.845298202000863*^9, 3.8452982814960814`*^9}, {3.845298318849135*^9, 
   3.845298321172031*^9}, {3.8452983680259438`*^9, 3.845298393952128*^9}, 
   3.845298430678537*^9, {3.8452988492796392`*^9, 3.845298885091926*^9}, {
   3.845299387501663*^9, 3.8452994180760593`*^9}, {3.845299480007214*^9, 
   3.8452996284723883`*^9}, {3.845299665369811*^9, 3.845299669665019*^9}, {
   3.845299725238721*^9, 3.845299812666788*^9}, {3.8453034288522787`*^9, 
   3.845303451835134*^9}, {3.8453034824764843`*^9, 3.845303539258521*^9}, {
   3.845303572868043*^9, 3.8453036170911827`*^9}, {3.845303649508624*^9, 
   3.845303723091363*^9}, {3.845305515964817*^9, 3.845305585003141*^9}, {
   3.8453063086466093`*^9, 3.845306355036281*^9}, {3.845306602257779*^9, 
   3.8453066381688766`*^9}, {3.845306668225999*^9, 3.845306708577682*^9}, {
   3.845385759033904*^9, 3.845385837865658*^9}, {3.845385871938367*^9, 
   3.8453859375613623`*^9}, {3.8454527528828077`*^9, 3.845452804679349*^9}, {
   3.8455647739201603`*^9, 3.84556477530548*^9}, {3.8455717258911247`*^9, 
   3.845571977475243*^9}, {3.845572228919136*^9, 3.8455722332170057`*^9}, 
   3.8455726665536413`*^9, 3.845572919975371*^9, 3.845619748197866*^9, {
   3.8457356347682657`*^9, 3.8457356644625874`*^9}, {3.8458164245044603`*^9, 
   3.845816443277484*^9}, {3.846332406979836*^9, 3.846332437792861*^9}, {
   3.847114994576721*^9, 3.847115008477798*^9}, {3.8476272534788313`*^9, 
   3.8476272684965267`*^9}, {3.85031365361434*^9, 3.850313751461088*^9}, {
   3.850313869004898*^9, 3.8503140797988367`*^9}, {3.850314129743258*^9, 
   3.850314138983287*^9}, {3.8503694884724483`*^9, 3.85036949134619*^9}, {
   3.850369532075824*^9, 3.850369550738777*^9}, {3.850399882207321*^9, 
   3.850399894766055*^9}, {3.850568500928562*^9, 3.850568510572801*^9}, {
   3.850568553798938*^9, 3.85056858887189*^9}, {3.850655524336276*^9, 
   3.850655581236075*^9}, {3.8516018600890493`*^9, 3.8516018883584347`*^9}, {
   3.8516121111742697`*^9, 3.851612111453294*^9}, {3.851612149888275*^9, 
   3.8516121598141003`*^9}, {3.8516122144655647`*^9, 3.8516122430171337`*^9}, 
   3.851612572017911*^9, {3.8516627579642963`*^9, 3.851662758325798*^9}, {
   3.851673598413381*^9, 3.851673598803606*^9}, 3.85167365146918*^9, 
   3.8517462017734423`*^9, {3.8517462457532167`*^9, 3.85174627098811*^9}, {
   3.863611915859395*^9, 3.863611925954899*^9}, 3.863611984789844*^9, 
   3.8636143221851892`*^9, {3.863614401064406*^9, 3.863614518440984*^9}, {
   3.863614562698929*^9, 3.863614613762156*^9}, {3.863614722990309*^9, 
   3.863614798244667*^9}, {3.9368463574523277`*^9, 3.936846383763406*^9}, {
   3.9368464788418283`*^9, 3.936846480024044*^9}, {3.936846829140068*^9, 
   3.9368468347046423`*^9}, 3.936846876518096*^9, 3.93684967503445*^9, {
   3.9368498291724806`*^9, 3.9368498371360445`*^9}, {3.9368512618929567`*^9, 
   3.9368512646266317`*^9}, {3.9368513117399263`*^9, 3.9368513152658453`*^9}, 
   3.9368601268531914`*^9, 3.936860409922538*^9, {3.936860456404804*^9, 
   3.9368604590840244`*^9}, {3.936860708675141*^9, 3.936860711938699*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"e4012762-dc25-434e-8093-a1debb6361b6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1314., 669.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
Background->RGBColor[0.88, 1, 0.88],
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"01b6d23e-e716-4478-9296-706fe0e2c233"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 785, 15, 108, "Abstract",ExpressionUUID->"5ea679d1-100e-4463-bf8f-b97f628ead93"],
Cell[CellGroupData[{
Cell[1368, 39, 305, 7, 84, "Title",ExpressionUUID->"22aec4c3-5caf-4ba1-9658-bdc05be2d048"],
Cell[1676, 48, 308, 5, 41, "Author",ExpressionUUID->"885eab29-f6d0-48fb-93dd-9e2f7ff37935"],
Cell[1987, 55, 400, 6, 17, "Department",ExpressionUUID->"99b61ea7-1ccb-46af-90cf-456be21c01d0"],
Cell[2390, 63, 307, 5, 43, "Date",ExpressionUUID->"b2abcad3-0401-44c3-9976-337f85b0e6d3"],
Cell[CellGroupData[{
Cell[2722, 72, 408, 6, 64, "Section",ExpressionUUID->"44b989d0-985d-49b4-b515-70eaf7682b14"],
Cell[3133, 80, 597, 8, 34, "Text",ExpressionUUID->"800a45f8-4656-4e27-8a2b-bc84f5f4ea3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3767, 93, 343, 5, 64, "Section",ExpressionUUID->"93973b6b-5dc7-4775-9496-1fd8c31cdbc5"],
Cell[CellGroupData[{
Cell[4135, 102, 437, 6, 31, "Subsection",ExpressionUUID->"b3ca4b05-753f-428a-9ea0-9b6fef8556e3",
 CellGroupingRules->{"SectionGrouping", Inherited}],
Cell[4575, 110, 3479, 54, 78, "Input",ExpressionUUID->"64d19385-87b4-4436-ab71-ec5c3c66c21d"],
Cell[8057, 166, 336, 6, 34, "Text",ExpressionUUID->"09aa11dc-8c26-4892-95e7-e827906e28de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8430, 177, 341, 5, 31, "Subsection",ExpressionUUID->"1afbf8ea-e7aa-402f-8028-ab8afca4a804",
 CellGroupingRules->{"SectionGrouping", Inherited}],
Cell[8774, 184, 3054, 49, 39, "Input",ExpressionUUID->"0177cc6a-bacb-4643-b674-dac983eb5ebf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11865, 238, 355, 5, 31, "Subsection",ExpressionUUID->"f277bcf4-4b2e-495f-95ca-b2a0d9e5cca5"],
Cell[12223, 245, 3145, 48, 39, "Input",ExpressionUUID->"be0554ff-e4ee-446b-86c5-fe8af878a703"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15405, 298, 435, 6, 31, "Subsection",ExpressionUUID->"5be59f3a-5c17-4e73-ae3b-774d05a70f0f"],
Cell[15843, 306, 3316, 52, 39, "Input",ExpressionUUID->"3d3183e4-b560-4038-ae8e-12b152fab50a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19196, 363, 459, 6, 31, "Subsection",ExpressionUUID->"2a044fb4-ec7a-4645-b9c7-abf85661ab18"],
Cell[19658, 371, 3237, 48, 39, "Input",ExpressionUUID->"60696b57-b9ce-4a1f-9d4e-fe88bc1c3aa0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22932, 424, 418, 5, 31, "Subsection",ExpressionUUID->"38122ca4-9200-4ae1-bfc8-f7d644dbb708"],
Cell[23353, 431, 3678, 63, 39, "Input",ExpressionUUID->"11f923f3-3f0e-4095-b45b-55cf68ce8438"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27068, 499, 442, 6, 31, "Subsection",ExpressionUUID->"711295ce-6902-4aa1-9650-e8c097473dbd"],
Cell[27513, 507, 4490, 87, 173, "Input",ExpressionUUID->"08c2569d-8798-4c41-9213-20099c31ce98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32040, 599, 269, 4, 31, "Subsection",ExpressionUUID->"467b3bad-71ed-42e6-a36b-6fd320328b1e"],
Cell[32312, 605, 6016, 130, 211, "Input",ExpressionUUID->"199db859-e1e0-414b-b0bc-84332b70c5e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38365, 740, 281, 4, 31, "Subsection",ExpressionUUID->"d2b8f80b-fd52-4679-bbf4-ad0eae3a4deb"],
Cell[38649, 746, 3521, 50, 59, "Input",ExpressionUUID->"e4012762-dc25-434e-8093-a1debb6361b6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

